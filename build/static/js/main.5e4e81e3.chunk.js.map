{"version":3,"sources":["context/cartContext.js","components/CartWidget/CartWidget.jsx","imgs/title.jpg","components/NavBar/NavBar.jsx","components/itemComponents/Item/Item.jsx","components/itemComponents/ItemList/ItemList.jsx","components/Loader/Loader.jsx","firebase/firebaseConfig.js","components/itemComponents/ItemListContainer/ItemListContainer.jsx","components/itemComponents/ItemCount/ItemCount.jsx","components/FinishBuying/FinishBuying.jsx","components/TechnInfo/TechInfo.jsx","components/itemComponents/ItemDetail/ItemDetail.jsx","components/NotExists/NotExists.jsx","components/itemComponents/ItemDetailContainer/ItemDetailContainer.jsx","components/CartItem/CartItem.jsx","components/Cart/Cart.jsx","components/BuyingForm/BuyingForm.jsx","components/MyOrders/MyOrders.jsx","components/Heading/Heading.jsx","App.jsx","index.jsx"],"names":["CartContext","createContext","CartProvider","children","itemsInLocal","localStorage","getItem","JSON","parse","ordersInLocal","useState","cart","setCart","console","log","items","setItems","total","setTotal","orderIds","setOrderIds","useEffect","updateItems","setItem","stringify","getTotal","reduce","acc","item","quantity","sumalize","prod","price","Provider","value","addToCart","obj","duplicate","find","product","undefined","indexOfDuplicate","findIndex","splice","img","id","stock","isInCart","itemName","deleteItem","editedItems","filter","CartWidget","useContext","className","to","NavBar","exact","src","logo","alt","href","data-target","Item","name","pictureUrl","description","slice","ItemList","map","p","Loader","require","config","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","firestore","ItemListContainer","categoryId","useParams","isMounted","collection","get","then","querySnapshot","size","documents","docs","doc","data","catch","err","length","category","ItemCount","setIsAdded","initial","counter","setCounter","isIn","setIsIn","limitToBuy","setLimitToBuy","isItemAlreadyInCart","useCallback","limitQtyToBuy","qty","onClick","disabled","onChange","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","FinishBuying","TechInfo","details","Object","entries","key","toUpperCase","ItemDetail","bigImg","setBigImg","isAdded","style","backgroundImage","onMouseOver","NotExists","title","ItemDetailContainer","loading","setLoading","exists","error","finally","CartItem","Cart","BuyingForm","useForm","register","handleSubmit","watch","errors","email","confirmEmail","passErr","setPassErr","setError","newId","setNewId","history","useHistory","motivationNotif","configure","onSubmit","order","buyer","lastname","phone","telephone","date","Timestamp","fromDate","Date","removeItem","add","db","itemCollection","bache","batch","forEach","update","commit","e","updateStocks","push","type","autoComplete","ref","required","minLength","message","maxLength","htmlFor","pattern","onBlur","display","MyOrders","ordersInfo","setOrdersInfo","itemRefs","Promise","all","reverse","getOrders","time","seconds","DateTime","fromSeconds","c","day","month","year","hour","minute","Heading","App","justEntered","setJustEntered","M","AutoInit","toasti","path","component","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5e4e81e3.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\n\nexport const CartContext = createContext({});\n\nexport const CartProvider = ({ children }) => {\n  const itemsInLocal = () => {\n    if (localStorage.getItem(\"cart\") !== null) {\n      return JSON.parse(localStorage.getItem(\"cart\"));\n    } else {\n      return [];\n    }\n  };\n  const ordersInLocal = () => {\n    if (localStorage.getItem(\"my-orders\") !== null) {\n      return JSON.parse(localStorage.getItem(\"my-orders\"));\n    } else {\n      return [];\n    }\n  };\n\n  const [cart, setCart] = useState(itemsInLocal);\nconsole.log('context-cart:', cart)\n  const [items, setItems] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [orderIds, setOrderIds] = useState(ordersInLocal);\n\n  useEffect(() => {\n    updateItems();\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    localStorage.setItem(\"my-orders\", JSON.stringify(orderIds));\n    getTotal();\n  });\n\n  const addToCart = (obj) => {\n    // Primero busco si ya existe dentro del array del state Cart un objeto que tenga\n    // el mismo nombre que el que quiero agregar al carrito, si no existe ahi si lo agrego.\n    const duplicate = cart.find((product) => product.item === obj.item);\n\n    if (duplicate !== undefined) {\n      const indexOfDuplicate = cart.findIndex(\n        (product) => product.item === obj.item\n      );\n\n      cart.splice(indexOfDuplicate, 1, {\n        item: obj.item,\n        quantity: obj.quantity + duplicate.quantity,\n        price: obj.price,\n        img: obj.img,\n        id: obj.id,\n        stock: obj.stock\n      });\n    } else {\n      setCart([\n        ...cart,\n        {\n          item: obj.item,\n          quantity: obj.quantity,\n          price: obj.price,\n          img: obj.img,\n          id: obj.id,\n          stock: obj.stock\n        }\n      ]);\n    }\n  };\n\n  const isInCart = (itemName) => {\n    const isIn = cart.find((product) => product.item === itemName);\n\n    return isIn;\n  };\n\n  const updateItems = () => {\n    let total = cart.reduce((acc, item) => acc + item.quantity, 0);\n    setItems(total);\n  };\n\n  const getTotal = () => {\n    const sumalize = cart.reduce(\n      (acc, prod) => acc + prod.price * prod.quantity,\n      0\n    );\n    setTotal(sumalize);\n  };\n\n  const deleteItem = (itemName) => {\n    const editedItems = cart.filter((product) => product.item !== itemName);\n    setCart(editedItems);\n    localStorage.setItem(\"cart\", JSON.stringify(editedItems));\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        addToCart,\n        isInCart,\n        cart,\n        setCart,\n        items,\n        updateItems,\n        total,\n        deleteItem,\n        orderIds,\n        setOrderIds,\n        itemsInLocal,\n        ordersInLocal\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n","import React,{useContext} from 'react';\n\n//Routing\nimport { Link } from 'react-router-dom';\n\n//Context\nimport {CartContext} from '../../context/cartContext';\n\n//Particular CSS\nimport './CartWidget.css';\n\n\nconst CartWidget = () => {\n\n    const { items }= useContext(CartContext);\n\n    return (\n        <>  \n            <div className = \"cartwidget-container\" >\n                {\n                    items > 0 \n                    && \n                    <div className=\"total-items\">\n                        <p>{items}</p>\n                    </div>\n                }\n                <Link to=\"/cart\" > <i className=\"material-icons\">shopping_cart</i> </Link>\n            </div>\n        </>\n    )\n\n}\n\nexport default CartWidget\n","export default __webpack_public_path__ + \"static/media/title.7c7ba82e.jpg\";","import React from 'react';\n\n//Components\nimport CartWidget from \"../CartWidget/CartWidget\";\n\n//Particular Css\nimport './NavBar.css';\nimport logo from '../../imgs/title.jpg'\n//Routing\nimport {NavLink} from 'react-router-dom'\n\n\nconst NavBar = () => {\n\n    return (\n        <>  \n            <nav id='nav'>\n                <div className=\"nav-wrapper\">\n                    {/* El atributo exact hace que el router busque exactamente la ruta / y no todas las q empiezen con / */}\n                    <NavLink to=\"/\" className=\"brand-logo\" exact >\n                        <img src={logo} alt=\"NextGym\" />\n                    </NavLink>\n                    <a href=\"/#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n                    <ul className=\"right hide-on-med-and-down\">\n                        <li>\n                            <NavLink to=\"/categories/suplementos\" className=\"navlink\"> SUPLEMENTOS </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/categories/articulos\" className=\"navlink\"> ARTICULOS </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/my-orders\" className=\"navlink \" > PEDIDOS </NavLink>\n                        </li>\n                    </ul>\n                    {/* Icono de carrito de compras */}\n                    <CartWidget />\n                </div>\n            </nav>\n            {/* Mismo menu pero cuando esta colapsado para mobile */}\n            <ul className=\"sidenav sidenav-close\" id=\"mobile-demo\" >\n                <li>\n                    <NavLink to=\"/categories/suplementos\" className=\"navlink\"> SUPLEMENTOS </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/categories/articulos\" className=\"navlink\"> ARTICULOS </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/my-orders\" className=\" navlink \" > PEDIDOS </NavLink>\n                </li>\n\n                <li>\n                    <NavLink to=\"/\" className=\"navlink\" exact >\n                                VER TIENDA\n                    </NavLink>\n                </li>\n            </ul>\n        </>\n    )\n};\n\nexport default NavBar;\n","import React from 'react';\n\n//Particular CSS\nimport './Item.css';\n\n//Routing\nimport { Link } from 'react-router-dom';\n\n\nconst Item = ({ id, name, price, pictureUrl, description }) => {\n\n    return (\n        <Link to={`/item/${id}`} >\n            <div className=\"card-container\">\n                <div className=\"img-container\">\n                    <img src={pictureUrl[0]} alt=\"\"/>\n                </div>\n\n                <div className=\"info-container\">\n                    \n                    <p className='title truncate'>{name}</p>\n                    <p className='description'>{description.slice(0, 19)}</p>\n                    <p className='price'>${price}</p>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default Item\n","import React from 'react';\n\n//Components\nimport Item from '../Item/Item';\n\n//Particular CSS\nimport './ItemList.css';\n\nconst ItemList = ({ items }) => {\n\n    return (\n        \n        <div className=\"ItemList\">\n            { items.map( p =>\n                <Item\n                    key={p.id}\n                    id={p.id} \n                    name={p.name} \n                    price={p.price} \n                    pictureUrl={p.pictureUrl}  \n                    description={p.description}\n                />)\n            }\n        </div>\n    )\n}\n\nexport default ItemList\n","import React from 'react';\n\n//Particular Css\nimport './Loader.css';\n\nconst Loader = () => {\n    return (\n        <>\n            <div className=\"loader-screen\">\n                <div className=\"preloader-wrapper big active\">\n                    <div className=\"spinner-layer\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>   \n        </>\n    )\n}\n\nexport default Loader\n","\n//Inicializacion de Firebase/Firestore\nimport firebase from 'firebase/app';\nimport '@firebase/firestore';\nimport '@firebase/auth';\n\nrequire(\"dotenv\").config()\n\n\nconst app = firebase.initializeApp({\n    apiKey: \"AIzaSyCqG_1hm7AJN58pyBj_lbMecOtwP2NXbzQ\",\n    authDomain: \"taxis-stackblitz.firebaseapp.com\",\n    projectId: \"taxis-stackblitz\",\n    storageBucket: \"taxis-stackblitz.appspot.com\",\n    messagingSenderId: \"977311415632\",\n    appId: \"1:977311415632:web:c4a419e65259ff87fa8055\"\n /*    apiKey: `${ process.env.REACT_APP_API_KEY }` ,\n    authDomain: `${ process.env.REACT_APP_AUTH_DOMAIN }` ,\n    projectId: `${ process.env.REACT_APP_PROJECT_ID }` ,\n    storageBucket: `${ process.env.REACT_APP_STORAGE_BUCKET }` ,\n    messagingSenderId: `${ process.env.REACT_APP_MESSAGING_SENDER_ID }` ,\n    appId: `${ process.env.REACT_APP_APP_ID }` */\n});\n\nexport const getFirebase = () => {\n    return app;\n}\n\nexport const getFirestore = () => {\n    return firebase.firestore(app);\n};\n\n\n\n","//Hooks\nimport React, { useEffect, useState } from 'react'\nimport {useParams} from 'react-router-dom'\n\n//Components\nimport ItemList from '../ItemList/ItemList'\nimport Loader from '../../Loader/Loader';\n\n//Firestore\nimport { getFirestore } from '../../../firebase/firebaseConfig';\n\n//Particular CSS\nimport './ItemListContainer.css'\n\n\nconst ItemListContainer = () => {\n\n    const {categoryId} = useParams();//Categoria definida en ruta para saber que productos filtrar\n\n    const [items, setItems] = useState([]);\n    \n\n    useEffect(() => {\n\n        let isMounted = true;\n\n        const db = getFirestore();\n        const itemCollection = db.collection(\"items\");\n\n        itemCollection.get().then(( querySnapshot ) => {\n\n            if(isMounted){\n\n                if(querySnapshot.size === 0 ) {\n                    console.log('No results!')\n                }\n    \n                const documents = querySnapshot.docs.map( doc => ( {id: doc.id, ...doc.data()} ) )\n                setItems( documents ) ;\n            }\n        })\n        .catch(err => {\n            console.log('Error searching items', err );\n        });\n\n        return () => {\n            isMounted = false; \n        };\n\n    },[]);\n\n\n\n    if (items.length > 0){\n\n        if(categoryId !== undefined){\n            return(\n\n                <div className=\"item-list-container\">  \n                {\n                    <ItemList items={ items.filter(product => product.category === `${categoryId}`) } />\n                }  \n                </div>\n            ) \n        }else{\n            return(\n                <div className=\"item-list-container \">    \n                    <ItemList items={items} />\n                </div>\n            )\n        }\n    }else{\n        return(\n            <Loader/>\n        )\n    }\n    \n}\n\nexport default ItemListContainer;\n","import React,{useContext,useState ,useEffect, useCallback}from 'react'\n\n//Context\nimport {CartContext} from '../../../context/cartContext';\n//Librerias\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n//Particular CSS\nimport './ItemCount.css'\n\nconst ItemCount = ({  setIsAdded, initial, stock, item }) => {\n\n    const { addToCart,isInCart,updateItems } = useContext(CartContext);\n\n    // En caso que no haya stock cambio el valor inicial por \"Sin stock\"\n    if(stock === 0){ initial = \"Sin stock\"}\n\n    const [ counter, setCounter ] = useState(initial);\n    const [ isIn, setIsIn ] = useState();// State que controla si el producto ya esta añadido al cart\n    \n    // State que controla la suma de los items ya agregados al cart y los items que se quieren volver a sumar =>\n    // no superen el stock del item.\n    const [ limitToBuy, setLimitToBuy ] = useState();\n\n    const removeItem = () => setCounter(counter -1);\n    const addItem = () => setCounter(counter + 1);\n\n    const toasti = () => {toast(`${counter} ${counter>1 ? 'items agregados': 'item agregado'} al carrito `, {\n        position: \"top-left\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n    })};\n\n    const isItemAlreadyInCart = useCallback(() => isInCart(item.name),[isInCart, item.name]);\n    \n\n    const limitQtyToBuy = useCallback(() => {\n        \n        const qty = isItemAlreadyInCart();\n\n        if( (qty?.quantity + counter) === item.stock ) {\n            setLimitToBuy(true)\n        } else {\n            setLimitToBuy(false)\n        }\n        \n    },[counter, isItemAlreadyInCart,item.stock]) \n    \n\n    useEffect(() => {\n\n        setIsIn(isItemAlreadyInCart);\n        limitQtyToBuy();\n\n    }, [isItemAlreadyInCart, limitQtyToBuy])\n\n        \n    return (\n        <>  \n            <div className=\"item-counter\">\n\n                <div className=\"counter-container\">\n\n                    <button onClick = { removeItem } className=\"waves-effect waves-light btn counter-btn\" disabled={ counter <= initial }><p>-</p></button>\n                    <p className=\"counter-value\" onChange = { isItemAlreadyInCart } >\n                        {\n                            (isIn !== undefined && isIn?.quantity === isIn?.stock ) ?\n                            \"No hay mas stock\"\n                            :\n                            counter \n                        }\n                    </p>\n                    <button onClick = { addItem } className=\"waves-effect waves-light btn counter-btn\"\n                     disabled={ counter >= stock || stock === 0 || (isIn !== undefined && isIn?.quantity === isIn?.stock ) || limitToBuy }>\n                         <p>+</p>\n                    </button>\n                    \n                </div>\n\n                <button \n                    onClick={ ()=>{\n                        addToCart({item:item.name, quantity: counter, price: item.price, img: item.pictureUrl[0], id: item.id, stock: item.stock});\n                        setCounter(initial);\n                        setIsAdded(true);\n                        updateItems();\n                        toasti();\n                    }}\n                    className=\"waves-effect btn\"\n                    disabled={stock === 0 || (isIn !== undefined && isIn?.quantity === isIn?.stock )} //Deshabilito la opcion de comprar mas si es que ya se llego al limite de stock \n                >\n                    {\n                        isIn !== undefined  ? \n                        `Agregar ${counter} más` \n                        : \n                        'Agregar al carrito'\n                    }\n                    \n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default ItemCount\n","import React from 'react';\n//Routing\nimport { Link } from 'react-router-dom'\n//CSS particular\nimport './FinishBuying.css'\n\nconst FinishBuying = () => {\n    return (\n\n        <div className=\"finish-buying\">\n            <Link to=\"/cart\" \n                className=\"waves-effect btn\">\n                Ir al carrito\n                <i className=\"material-icons cart\">shopping_cart</i>\n            </Link>\n         </div>\n\n    )\n}\n\nexport default FinishBuying\n","import React from 'react';\n\n//Css particular\nimport './TechInfo.css';\n\nconst TechInfo = ({item}) => {\n    return (\n\n        <div className=\"details-container\">\n            <ul>\n                {\n                    item.details !== undefined \n                    &&\n                    Object.entries(item.details).map( ([key,value]) =>\n\n                        <li key={key}>{key.toUpperCase()}<span className=\"span\">{ value }</span></li> \n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default TechInfo\n","import React, { useState } from 'react';\n\n//Particular CSS\nimport './ItemDetail.css';\n\n//Components\nimport ItemCount from '../ItemCount/ItemCount';\nimport FinishBuying from '../../FinishBuying/FinishBuying';\nimport TechInfo from '../../TechnInfo/TechInfo';\n\n\nconst ItemDetail = ({item}) => {\n\n\n    const [ bigImg, setBigImg ] = useState('');\n    const [ isAdded, setIsAdded ] = useState(false);\n\n\n    return (\n        <div className=\"item-detail\">\n            <div className=\"container-one\">\n                <div className=\"img-counter-container\">\n                    <div className=\"small-images-big-image-container\">\n                        <div className=\"small-images\">\n                            <div className=\"sm-img\" \n                                style={{ \n                                    backgroundImage: `url(${item.pictureUrl[0]})` \n                                }}\n                                onMouseOver={ () => setBigImg({backgroundImage: `url(${item.pictureUrl[0] })`})}\n                            >\n                            </div>\n                            <div className=\"sm-img\" \n                                style={{\n                                    backgroundImage: `url(${ item.pictureUrl[1] !== undefined ? item.pictureUrl[1] : item.pictureUrl[0] })` \n                                }}\n                                onMouseOver={ () => setBigImg({backgroundImage: `url(${item.pictureUrl[1] !== undefined ? item.pictureUrl[1] : item.pictureUrl[0] })`})}\n                            >\n                            </div>\n                            <div className=\"sm-img\" \n                                style={{\n                                    backgroundImage: `url(${item.pictureUrl[2] !== undefined ? item.pictureUrl[2] : item.pictureUrl[0] })`,\n                                }}\n                                onMouseOver={ () =>{\n                                    setBigImg({backgroundImage: `url(${item.pictureUrl[2] !== undefined ? item.pictureUrl[2] : item.pictureUrl[0] })`});\n                                }}\n                            >\n                            </div>\n                        </div>\n                        <div className=\"big-image\" \n                            style={bigImg !== '' ? bigImg : { backgroundImage: `url(${item?.pictureUrl[0] })`} }\n                            >      \n                        </div>\n                    </div>\n                    <ItemCount isAdded={isAdded} setIsAdded={setIsAdded} initial={item.initial} stock={item.stock} item={item} /> \n                    {\n                        isAdded \n                            && \n                        <FinishBuying/>\n                    } \n                </div>\n            </div>\n            <div className=\"container-two\">\n                <div className=\"title-price\">\n \n                    <h4 className=\"item-name\">{item.name}</h4>\n                    <h4>${item.price}</h4>\n                    <p>STOCK: {item.stock}</p>\n                    <small>COD: { item.id}</small>\n                    <h6>Description: {item.description}</h6>\n                </div>\n                {/* Solo renderizo el detalle tecnico si es que existe\n                    Algunos productos no cuentan con detalle tecnico pero si con una descripción */}\n                {\n                    item.details !== undefined && <TechInfo item={item} />\n                }\n                \n            </div>\n        </div>\n    ) \n        \n\n\n}\n\nexport default ItemDetail\n","import React from 'react';\n\n//Icon Component\nimport { BiCommentError } from 'react-icons/bi';\n\n//Routing\nimport { Link } from 'react-router-dom';\n\n//Particular Css\nimport './NotExists.css';\n\nconst NotExists = ({title}) => {\n    return (\n        <>\n            <div className=\"not-exist-item\">\n                <BiCommentError className=\"coment-error\"/>\n                <h4>{title}</h4>\n                <Link to=\"/\"><button className=\"waves-effect waves-light btn backToLanding-btn\">Volver a la tienda</button></Link> \n            </div>\n        </>\n    )\n}\n\nexport default NotExists\n","import React, { useEffect, useState} from 'react'\n\n//Components\nimport ItemDetail from '../ItemDetail/ItemDetail';\nimport Loader from '../../Loader/Loader';\nimport NotExists from '../../NotExists/NotExists';\n\n//Hooks\nimport {useParams} from 'react-router-dom';\n\n//Firestore\nimport { getFirestore } from '../../../firebase/firebaseConfig';\n\n\nconst ItemDetailContainer = () => {\n\n    const [item, setItem ] = useState([]);\n    const [loading, setLoading ] = useState(true);\n\n    const {id} = useParams();//Utilizo el id de la ruta actual para saber que componente buscar y mostrar su detalle\n\n\n    useEffect(() => {\n\n        const db = getFirestore();\n\n        const itemCollection = db.collection('items');\n        const item = itemCollection.doc(id);\n        \n        item.get().then( doc => {\n\n            if(!doc.exists){\n                setItem(\"not exist\")\n                return;\n            }\n            \n            setItem({ id: doc.id, ...doc.data() });\n            \n        })\n        .catch(error => console.log(error))\n        .finally(()=> {\n            setLoading(false)\n        })\n\n    }, [id]);\n\n    if(loading) {\n        return (\n            <Loader/>\n        )\n    } else if(item === \"not exist\"){\n        return(\n            <NotExists title={\"Ooops!!! La página o producto que estas buscando no existe.\"}/>\n        )\n    } else {\n        return(\n            <ItemDetail item={item} /> \n        )\n    }\n}\n\nexport default ItemDetailContainer;\n","import React from 'react';\n\n//Css particular\nimport './CartItem.css'\n\nconst CartItem = ({item, quantity, price, img , deleteItem }) => {\n\n    return (\n        <>\n            <div className=\"cart-item \">\n                <i onClick={ ()=> deleteItem(item) } className=\"material-icons delete-item item\" >cancel</i>\n                <div  className=\"item-img item\" style={{backgroundImage: `url(${img})`}}>\n                </div>\n                <div className=\"item-name item\">\n                    {item}\n                </div>\n                <div className=\"item-quantity item\">\n                    {quantity}\n                </div>\n                <div className=\"item-value item\">\n                    $ {price}\n                </div>\n                <div className=\"item-totalValue item\">\n                    $ {quantity * price}\n                </div> \n            </div>\n            <hr/> \n        </>\n    )\n}\n\nexport default CartItem\n","import React,{useContext} from 'react';\n\n//CSS particular\nimport './Cart.css';\n\n//Context\nimport {CartContext} from '../../context/cartContext';\n\n//Routing\nimport { Link } from 'react-router-dom';\n\n//Components\nimport CartItem from '../CartItem/CartItem';\n\n\nconst Cart = () => {\n\n    const { cart, total, deleteItem}= useContext(CartContext);\n\n    if (cart.length !== 0) {\n\n        return (\n            <div className=\"cart-container\">\n                <div className=\"cart\">\n                    <div className=\"cart-columns\">\n                        <p></p>\n                        <p className=\"truncate\">Imagen</p>\n                        <p className=\"truncate\">Nombre</p>\n                        <p className=\"truncate\">Cantidad</p>\n                        <p className=\"truncate\">Valor unitario</p>\n                        <p className=\"truncate\">Total</p>\n                    </div>\n                    <div className=\"cart-items\">\n                        {\n                            cart.map( ({ item, quantity, price, img }) =>(\n                                <CartItem key={item} item={item} quantity={quantity} price={price} img={img} deleteItem={deleteItem}  />\n                            ))\n                        }\n                    </div>\n                    <div className=\"cart-total\">\n                        <p className=\"total-amount\">\n                        Subtotal ${ total }\n                        </p>\n                        <Link to=\"/order\" className=\"waves-effect btn\">Finalizar compra</Link>\n                    </div>\n                </div>\n            </div>\n        )\n\n    } else {\n        return(\n            <div className=\"cart-container-empty\">\n                <i className=\"material-icons empty-cart\">shopping_cart</i>\n                <h4 className=\"empty-cart-title\">Parece que tu carrito está vacio <br/> </h4>\n                <Link to=\"/\"><button className=\"waves-effect waves-light btn backToLanding-btn\">Volver a la tienda</button></Link> \n            </div>\n        )\n    }\n\n\n}\n\nexport default Cart;\n","import React,{useContext,useState, useEffect} from 'react';\n\n// Import firebase para usar la libreria de timestamp\nimport firebase from 'firebase/app';\nimport '@firebase/firestore';\n\n//Librerias\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n//Components\nimport NotExists from '../NotExists/NotExists';\n\n//Firestore\nimport { getFirestore } from '../../firebase/firebaseConfig';\n\n//Context\nimport {CartContext} from '../../context/cartContext';\n\n//History\nimport { useHistory } from \"react-router-dom\";\n\n//Hook-Form\nimport { useForm } from 'react-hook-form';\n\n//Css particular\nimport './BuyingForm.css';\n\nconst BuyingForm = () => {\n\n    const { cart, setCart, total, orderIds, setOrderIds, itemsInLocal } = useContext(CartContext);\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const email = watch(\"email\");\n    const confirmEmail = watch(\"confirmEmail\");\n\n    const [passErr, setPassErr] = useState(false);\n \n    const [ error, setError ] = useState(false);\n    \n    const [loading, setLoading] = useState(false);\n    //Este state controla que se haya generado una id de compra\n    const [newId, setNewId] = useState();\n\n    let history = useHistory();\n\n    //Si el carrito no esta vacio entonces mando notificacion motivacional\n    //De lo contrario redirigo al usuario a la home page\n    \n    useEffect(() =>{\n        if (cart.length !== 0){\n            motivationNotif()\n        } \n        \n        \n    }, [cart,history]);\n\n\n    const motivationNotif = () => {toast('Estas a solo un paso!! Completa los datos para coordinar la entrega del producto!!', {\n        position: \"bottom-left\",\n        autoClose: 7500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n    })};\n    const purchaseNotif = () => {toast('Compra realizada con exito!!El codigo de pedido resaltado es el mas reciente', {\n        position: \"bottom-left\",\n        autoClose: 7500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n    })};\n    toast.configure();\n    \n    //Funcion para actualizr los stocks en firestore de los productos recien comprados\n    const updateStocks = () => {\n\n        const db = getFirestore()\n        const itemCollection =  db.collection('items');\n        const bache = db.batch()\n\n        cart.forEach( item => {\n\n            bache.update(itemCollection.doc(item.id),{stock: item.stock - item.quantity})\n        })\n\n        bache\n        .commit()\n        .then(()=> {\n            console.log(\"Bache ok\")\n        })\n        .catch(e => console.log(e))\n\n    }\n\n    const handleOrder = (data)=> {\n\n        if (data) {\n\n            let order = \n            {\n                buyer: {\n                    name: `${data.name} ${data.lastname}`,\n                    phone: data.telephone,\n                    email: data.email\n                },\n                items: cart.map(item => ({\n                    id: item.id,\n                    item: item.item,\n                    price: item.price,\n                    qty: item.quantity\n                })),\n                date:  firebase.firestore.Timestamp.fromDate( new Date()) ,\n                total: total\n            };\n\n            setLoading(true);\n            localStorage.removeItem('cart');\n            setCart( itemsInLocal );\n            \n            const db = getFirestore();\n            const ordersCollection = db.collection(\"orders\");\n\n            ordersCollection\n            .add(order)\n            .then( ({ id }) =>{\n                setOrderIds( [ ...orderIds, { id }] );\n                setNewId(id);\n            })\n            .catch(err => {\n                setError(err);\n            })\n            .finally(()=>{\n                \n                updateStocks();\n                purchaseNotif();\n                newId !== '' && history.push(\"/my-orders\");\n            })\n        }\n    };\n\n\n    return (\n\n        cart.length === 0  && loading === false ? (\n\n            <NotExists title={\"Sigue mirando nuestro productos!!\"}/>\n        ): (\n            \n                <div className=\"buy-form-container\">\n\n                <form onSubmit={handleSubmit(handleOrder)} className=\"form-container\" >\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">account_circle</i>\n                        <input \n                            name=\"name\" \n                            id=\"name\" \n                            type=\"text\" \n                            className=\"validate\" \n                            autoComplete=\"none\" \n                            ref={register({\n                                required: \"Ingresar nombre\", minLength: {value:2, message:\"Minimo 2 caracteres\"}, maxLength: {value:12, message:\"Maximo 12 caracteres\"}\n                            })}\n                            />\n                        <label htmlFor=\"name\" >Nombre</label>\n                        { errors.name && <small>{ errors.name.message }</small> }\n                    </div>\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">account_circle</i>\n                        <input \n                            name=\"lastname\" \n                            id=\"lastname\" \n                            type=\"text\" \n                            className=\"validate\" \n                            autoComplete=\"none\" \n                            ref={register({\n                                required: \"Ingresar apellido\", minLength: {value:2, message:\"Minimo 2 caracteres\"}, maxLength: {value:12, message:\"Maximo 12 caracteres\"}\n                            })}\n                        />\n                        <label htmlFor=\"lastname\" >Apellido</label>\n                        { errors.lastname && <small>{ errors.lastname.message }</small> }\n                    </div>\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">phone</i>\n                        <input \n                            name=\"telephone\" \n                            id=\"telephone\" \n                            type=\"tel\" \n                            className=\"validate\"\n                            autoComplete=\"none\" \n                            ref={register({\n                                required: \"Ingrese su numero\", pattern: {\n                                    value: /^(?:(?:00)?549?)?0?(?:11|[2368]\\d)(?:(?=\\d{0,2}15)\\d{2})??\\d{8}$/, message:\"Ingrese un numero valido\"\n                                } \n                            })}\n                        />\n                        <label htmlFor=\"telephone\">Telefono/Celular</label>\n                        { errors.telephone && <small>{ errors.telephone.message }</small> }\n                    </div>\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">email</i>\n                        <input \n                            name=\"email\" \n                            id=\"email\" \n                            type=\"email\" \n                            className=\"validate\" \n                            autoComplete=\"none\"\n                            ref={register({\n                                required: \"Ingrese un email\", pattern:{ \n                                    value:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/ , message: \"Ingrese un email valido\"\n                                } \n                            })} \n                        />\n                        <label htmlFor=\"email\">Email</label>\n                        { errors.email && <small>{ errors.email.message }</small> }\n                    </div>\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">email</i>\n                        <input \n                            name=\"confirmEmail\" \n                            id=\"confirmEmail\" \n                            type=\"email\" \n                            className=\"validate\" \n                            autoComplete=\"none\"\n                            ref={register({\n                                required: \"Ingrese un email\", pattern:{ \n                                    value:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/ , message: \"Ingrese un email valido\"\n                                } \n                            })} \n                            onBlur = { ()=> confirmEmail !== email ? setPassErr(true) : setPassErr(false)}\n                            onChange = { ()=> confirmEmail === email && setPassErr(false) }\n                        />\n                        <label htmlFor=\"confirmEmail\">Confirmar Email</label>\n                        { passErr && <small>{ \"Sus emails son diferentes\"}</small> }\n                    </div>\n\n                    {/* Unica forma de que los autocomplete \"none\" funcionen fue agregando autoComplete = \"none\" a todos los inputs\n                    y crear un ultimo input innecesario (display: none) con autoComplete='on' */}\n                    <div className=\"input-field\" style={{display: 'none'}}>\n                        <i className=\"material-icons prefix\">email</i>\n                        <input id=\"asd\" type=\"email\" className=\"validate\" autoComplete=\"on\"/>\n                        <label htmlFor=\"asd\">Email</label>\n                    </div>\n                    {/* Fin de input innecesario :D */}\n\n                    <h5 className=\"total-amount\">\n                        Subtotal &nbsp; ${ total }\n                    </h5>\n                    <span></span>\n                    {error && <p>{error}</p> }\n\n\n                    {\n                        loading ? (\n                            <button className=\"waves-effect btn btn-getOrder \">\n                                <div className=\"loop\">\n                                    <i className=\"material-icons\">loop </i>\n                                </div>\n                            </button>\n                        ) : (\n                            <button disabled={ confirmEmail !== email } type=\"submit\" className= \"waves-effect btn btn-buy \">\n                                Finalizar compra\n                            </button>\n                        )\n                    }\n\n                </form>\n            </div>\n        )\n\n\n    )\n}\n\nexport default BuyingForm\n","import React,{useContext, useState, useEffect} from 'react';\n\n//Luxon\nimport { DateTime } from 'luxon';\n\n//Context\nimport {CartContext} from '../../context/cartContext';\n\n//Firestore\nimport { getFirestore } from '../../firebase/firebaseConfig';\n\n//Components\nimport Loader from '../Loader/Loader';\n\n//Css particular\nimport './MyOrders.css';\n\nconst MyOrders = () => {\n\n    const { orderIds ,setOrderIds } = useContext(CartContext);\n\n    const [ ordersInfo, setOrdersInfo ] = useState([]);\n    const [ loading, setLoading ] = useState(true);\n\n\n    useEffect(() => {\n\n        let isMounted = true;\n\n        const db = getFirestore();\n\n        // En \"getOrders\", \"itemRefs\" devuelve una promesa del documento especifico por cada id de compra que hay en el array de ids \"orderIds\".\n        // Luego voy a esperar que se resuelvan todas esas promesas con un Promise.All y ahi si llamar a setOrdersInfo para guardar la informacion.\n        if (isMounted) {\n            const getOrders = (orderIds, setOrdersInfo) => {\n\n                let itemRefs = orderIds.map( ({id}) => {\n                    return db.collection('orders').doc(id).get();\n                });\n        \n                Promise.all(itemRefs)\n                .then(docs => {\n        \n                    let items = docs.map(doc => ({id: doc.id, ...doc.data() } ) );\n                    //Reverse para que la ultima compra figure arriba\n                    setOrdersInfo(items.reverse())\n                })\n                .catch(e => console.log(e))\n                .finally(()=>{\n                    setLoading(false)\n                })\n        \n            };\n            getOrders( orderIds, setOrdersInfo);\n\n            return () => {\n                isMounted = false; \n            };\n        }\n\n\n    }, [orderIds]);\n\n    const time = (seconds)=> {\n\n        return  DateTime.fromSeconds(seconds)\n    }\n\n    if(loading) {\n        return(\n            <Loader/>\n        )\n    } else {\n        return (\n\n            <div className=\"orders-container\">\n                <div className=\"orders-organizer\">\n                    <h3 className=\"title\">Mis compras</h3>\n    \n                    <button \n                        className=\"waves-effect  waves-light btn\"\n                        onClick={()=> {\n                            localStorage.removeItem('my-orders');\n                            setOrderIds([])\n                        }}>\n                        Borrar historial\n                    </button>\n    \n                    <div className=\"orders-columns\">\n                        <p>Fecha</p>\n                        <p>Productos</p>\n                        <p>Codigo de pedido</p>\n                        <p>Total</p>\n                    </div>\n                    <div className=\"orders\">\n                        {   \n                            ordersInfo.length > 0 && (\n    \n                                ordersInfo.map( ({ id, total, date, items }) =>\n    \n                                    <div className=\"order-row\" key={id}>\n                                        <div className=\"order-info date\" >\n                                            {   \n                                                date &&\n                                                `${time(date.seconds).c.day}/${time(date.seconds).c.month}/${time(date.seconds).c.year} \n                                                ${time(date.seconds).c.hour}:${time(date.seconds).c.minute} `\n                                            }                           \n                                        </div>\n                                        <div className=\"order-info items\">\n                                            <ul>\n                                            {\n                                                items &&\n                                                items.map(item => <li className=\"truncate\" key={item.id}> {item.qty} x {item.item} </li> )\n                                            }\n                                            </ul>\n                                        </div>\n                                        <div className=\"order-info id \"> { id } </div>\n                                        <div className=\"order-info total\"> ${ total } </div>\n                                    </div>\n                                )\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MyOrders\n","\nimport './Heading.css'\n\nconst Heading = () => {\n      return (\n           \n                  <div className=\"heading\">\n                        <p>NexGym Store</p>\n                        <h2>Los Mejores Productos Fitness</h2>\n                  </div>\n          \n      )\n}\n\nexport default Heading\n","\nimport React, { useEffect, useState} from 'react';\n\n// Libreria de Materialize\nimport M from 'materialize-css';\n\n//CSS core de Materialize\nimport 'materialize-css/dist/css/materialize.min.css';\n\n//Componentes\nimport NavBar from  './components/NavBar/NavBar.jsx';\nimport ItemListContainer from './components/itemComponents/ItemListContainer/ItemListContainer';\nimport ItemDetailContainer from './components/itemComponents/ItemDetailContainer/ItemDetailContainer.jsx';\nimport Cart from './components/Cart/Cart';\nimport BuyingForm from './components/BuyingForm/BuyingForm.jsx';\nimport MyOrders from './components/MyOrders/MyOrders.jsx';\nimport Heading from './components/Heading/Heading.jsx';\n\n//Librerias\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n//Context\nimport {CartProvider} from './context/cartContext';\n\n//Router \nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n//Css particular\nimport './assets/styles/app.css'\nimport './assets/styles/colors.css'\n\n\nconst App = () => {\n\n    //State para controlar el toastify de bienvenida, una vez que entra el usuario no se mostrara si recarga la pagina\n    const [ justEntered, setJustEntered ] = useState(localStorage.getItem('justEntered'));\n\n    //Inicializo funcionalidades de materialize\n    useEffect(() => {\n        M.AutoInit();\n    }, []);\n    //Invoco el toast de bienvenida solo si es la primera vez que entra a la pagina\n    useEffect(() => {\n\n        if( justEntered === null ){\n\n            toasti();\n            localStorage.setItem('justEntered', true);\n            setJustEntered(false);\n        }\n\n    }, [justEntered]);\n\n    const toasti = () => {toast('Bienvenido a nexGym', {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n    })};\n    toast.configure();\n\n\n\n    return(\n        <Router>\n            <CartProvider>\n                <NavBar/>\n                <Heading /> \n                <Switch>\n                    <Route path=\"/\" exact component={ItemListContainer}/>\n                    <Route path=\"/categories/:categoryId\" component={ItemListContainer}/>\n                    <Route path=\"/item/:id\" component={ItemDetailContainer}/>\n                    <Route path=\"/cart\" component={Cart}/>\n                    <Route path=\"/order\" component={BuyingForm}/>\n                    <Route path=\"/my-orders\" component={MyOrders}/>\n                </Switch>\n            </CartProvider>\n        </Router>\n    ) \n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst root = document.getElementById('root');\n\nReactDOM.render( <App /> , root );"],"sourceRoot":""}