{"version":3,"sources":["context/cartContext.js","components/CartWidget/CartWidget.jsx","imgs/title.jpg","components/NavBar/NavBar.jsx","components/itemComponents/Item/Item.jsx","components/itemComponents/ItemList/ItemList.jsx","components/Loader/Loader.jsx","firebase/firebaseConfig.js","components/itemComponents/ItemListContainer/ItemListContainer.jsx","components/itemComponents/ItemCount/ItemCount.jsx","components/FinishBuying/FinishBuying.jsx","components/TechnInfo/TechInfo.jsx","components/itemComponents/ItemDetail/ItemDetail.jsx","components/NotExists/NotExists.jsx","components/itemComponents/ItemDetailContainer/ItemDetailContainer.jsx","components/CartItem/CartItem.jsx","components/Cart/Cart.jsx","components/BuyingForm/BuyingForm.jsx","components/MyOrders/MyOrders.jsx","components/Heading/Heading.jsx","App.jsx","index.jsx"],"names":["CartContext","createContext","CartProvider","children","itemsInLocal","localStorage","getItem","JSON","parse","ordersInLocal","useState","cart","setCart","items","setItems","total","setTotal","orderIds","setOrderIds","useEffect","updateItems","setItem","stringify","getTotal","reduce","acc","item","quantity","sumalize","prod","price","Provider","value","addToCart","obj","duplicate","find","product","undefined","indexOfDuplicate","findIndex","splice","img","id","stock","isInCart","itemName","deleteItem","editedItems","filter","CartWidget","useContext","className","to","NavBar","exact","src","logo","alt","href","data-target","path","Item","name","pictureUrl","description","slice","ItemList","map","p","Loader","require","config","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","firestore","ItemListContainer","categoryId","useParams","isMounted","collection","get","then","querySnapshot","size","console","log","documents","docs","doc","data","catch","err","length","category","ItemCount","setIsAdded","initial","counter","setCounter","isIn","setIsIn","limitToBuy","setLimitToBuy","isItemAlreadyInCart","useCallback","limitQtyToBuy","qty","onClick","disabled","onChange","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","FinishBuying","TechInfo","details","Object","entries","key","toUpperCase","ItemDetail","bigImg","setBigImg","isAdded","style","backgroundImage","onMouseOver","NotExists","title","ItemDetailContainer","loading","setLoading","exists","error","finally","CartItem","Cart","BuyingForm","useForm","register","handleSubmit","watch","errors","email","confirmEmail","passErr","setPassErr","setError","newId","setNewId","history","useHistory","motivationNotif","configure","onSubmit","order","buyer","phone","telephone","adress","date","Timestamp","fromDate","Date","removeItem","add","db","itemCollection","bache","batch","forEach","update","commit","e","updateStocks","push","type","autoComplete","ref","required","minLength","message","maxLength","htmlFor","lastname","pattern","onBlur","display","MyOrders","ordersInfo","setOrdersInfo","itemRefs","Promise","all","reverse","getOrders","time","seconds","DateTime","fromSeconds","c","day","month","year","hour","minute","Heading","App","justEntered","setJustEntered","M","AutoInit","toasti","component","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.fb8c0cd1.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\n\nexport const CartContext = createContext({});\n\nexport const CartProvider = ({ children }) => {\n  const itemsInLocal = () => {\n    if (localStorage.getItem(\"cart\") !== null) {\n      return JSON.parse(localStorage.getItem(\"cart\"));\n    } else {\n      return [];\n    }\n  };\n  const ordersInLocal = () => {\n    if (localStorage.getItem(\"my-orders\") !== null) {\n      return JSON.parse(localStorage.getItem(\"my-orders\"));\n    } else {\n      return [];\n    }\n  };\n\n  const [cart, setCart] = useState(itemsInLocal);\n  const [items, setItems] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [orderIds, setOrderIds] = useState(ordersInLocal);\n\n  useEffect(() => {\n    updateItems();\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    localStorage.setItem(\"my-orders\", JSON.stringify(orderIds));\n    getTotal();\n  });\n\n  const addToCart = (obj) => {\n    // Primero busco si ya existe dentro del array del state Cart un objeto que tenga\n    // el mismo nombre que el que quiero agregar al carrito, si no existe ahi si lo agrego.\n    const duplicate = cart.find((product) => product.item === obj.item);\n\n    if (duplicate !== undefined) {\n      const indexOfDuplicate = cart.findIndex(\n        (product) => product.item === obj.item\n      );\n\n      cart.splice(indexOfDuplicate, 1, {\n        item: obj.item,\n        quantity: obj.quantity + duplicate.quantity,\n        price: obj.price,\n        img: obj.img,\n        id: obj.id,\n        stock: obj.stock\n      });\n    } else {\n      setCart([\n        ...cart,\n        {\n          item: obj.item,\n          quantity: obj.quantity,\n          price: obj.price,\n          img: obj.img,\n          id: obj.id,\n          stock: obj.stock\n        }\n      ]);\n    }\n  };\n\n  const isInCart = (itemName) => {\n    const isIn = cart.find((product) => product.item === itemName);\n\n    return isIn;\n  };\n\n  const updateItems = () => {\n    let total = cart.reduce((acc, item) => acc + item.quantity, 0);\n    setItems(total);\n  };\n\n  const getTotal = () => {\n    const sumalize = cart.reduce(\n      (acc, prod) => acc + prod.price * prod.quantity,\n      0\n    );\n    setTotal(sumalize);\n  };\n\n  const deleteItem = (itemName) => {\n    const editedItems = cart.filter((product) => product.item !== itemName);\n    setCart(editedItems);\n    localStorage.setItem(\"cart\", JSON.stringify(editedItems));\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        addToCart,\n        isInCart,\n        cart,\n        setCart,\n        items,\n        updateItems,\n        total,\n        deleteItem,\n        orderIds,\n        setOrderIds,\n        itemsInLocal,\n        ordersInLocal\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n","import React,{useContext} from 'react';\n\n//Routing\nimport { Link } from 'react-router-dom';\n\n//Context\nimport {CartContext} from '../../context/cartContext';\n\n//Particular CSS\nimport './CartWidget.css';\n\n\nconst CartWidget = () => {\n\n    const { items }= useContext(CartContext);\n\n    return (\n        <>  \n            <div className = \"cartwidget-container\" >\n                {\n                    items > 0 \n                    && \n                    <div className=\"total-items\">\n                        <p>{items}</p>\n                    </div>\n                }\n                <Link to=\"/cart\" > <i className=\"material-icons\">shopping_cart</i> </Link>\n            </div>\n        </>\n    )\n\n}\n\nexport default CartWidget\n","export default __webpack_public_path__ + \"static/media/title.7c7ba82e.jpg\";","import React from 'react';\n\n//Components\nimport CartWidget from \"../CartWidget/CartWidget\";\n\n//Particular Css\nimport './NavBar.css';\nimport logo from '../../imgs/title.jpg'\n//Routing\nimport {NavLink, Route, Redirect} from 'react-router-dom'\n\n\nconst NavBar = () => {\n\n    return (\n        <>  \n            <nav id='nav'>\n                <div className=\"nav-wrapper\">\n                    {/* El atributo exact hace que el router busque exactamente la ruta / y no todas las q empiezen con / */}\n                    <NavLink to=\"/\" className=\"brand-logo\" exact >\n                        <img src={logo} alt=\"NextGym\" />\n                    </NavLink>\n                    <a href=\"/#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n                    <ul className=\"right hide-on-med-and-down\">\n                        <li>\n                            <NavLink to=\"/\" className=\"navlink\"> INICIO </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/categories/suplementos\" className=\"navlink\"> SUPLEMENTOS </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/categories/articulos\" className=\"navlink\"> ARTICULOS </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/my-orders\" className=\"navlink \" > PEDIDOS </NavLink>\n                        </li>\n                        <Route path=\"*\"> <Redirect to=\"https://taxis-stackblitz.web.app\" /> </Route>\n                    </ul>\n                    {/* Icono de carrito de compras */}\n                    <CartWidget />\n                </div>\n            </nav>\n            {/* Mismo menu pero cuando esta colapsado para mobile */}\n            <ul className=\"sidenav sidenav-close\" id=\"mobile-demo\" >\n                <li>\n                    <NavLink to=\"/categories/suplementos\" className=\"navlink\"> SUPLEMENTOS </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/categories/articulos\" className=\"navlink\"> ARTICULOS </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/my-orders\" className=\" navlink \" > PEDIDOS </NavLink>\n                </li>\n\n                <li>\n                    <NavLink to=\"/\" className=\"navlink\" exact >\n                                INICIO\n                    </NavLink>\n                </li>\n            </ul>\n        </>\n    )\n};\n\nexport default NavBar;\n","import React from 'react';\n\n//Particular CSS\nimport './Item.css';\n\n//Routing\nimport { Link } from 'react-router-dom';\n\n\nconst Item = ({ id, name, price, pictureUrl, description }) => {\n\n    return (\n        <Link to={`/item/${id}`} >\n            <div className=\"card-container\">\n                <div className=\"img-container\">\n                    <img src={pictureUrl[0]} alt=\"\"/>\n                </div>\n\n                <div className=\"info-container\">\n                    \n                    <p className='title truncate'>{name}</p>\n                    <p className='description'>{description.slice(0, 19)}</p>\n                    <p className='price'>${price}</p>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default Item\n","import React from 'react';\n\n//Components\nimport Item from '../Item/Item';\n\n//Particular CSS\nimport './ItemList.css';\n\nconst ItemList = ({ items }) => {\n\n    return (\n        \n        <div className=\"ItemList\">\n            { items.map( p =>\n                <Item\n                    key={p.id}\n                    id={p.id} \n                    name={p.name} \n                    price={p.price} \n                    pictureUrl={p.pictureUrl}  \n                    description={p.description}\n                />)\n            }\n        </div>\n    )\n}\n\nexport default ItemList\n","import React from 'react';\n\n//Particular Css\nimport './Loader.css';\n\nconst Loader = () => {\n    return (\n        <>\n            <div className=\"loader-screen\">\n                <div className=\"preloader-wrapper big active\">\n                    <div className=\"spinner-layer\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>   \n        </>\n    )\n}\n\nexport default Loader\n","\n//Inicializacion de Firebase/Firestore\nimport firebase from 'firebase/app';\nimport '@firebase/firestore';\nimport '@firebase/auth';\n\nrequire(\"dotenv\").config()\n\n\nconst app = firebase.initializeApp({\n    apiKey: \"AIzaSyCqG_1hm7AJN58pyBj_lbMecOtwP2NXbzQ\",\n    authDomain: \"taxis-stackblitz.firebaseapp.com\",\n    projectId: \"taxis-stackblitz\",\n    storageBucket: \"taxis-stackblitz.appspot.com\",\n    messagingSenderId: \"977311415632\",\n    appId: \"1:977311415632:web:c4a419e65259ff87fa8055\"\n /*    apiKey: `${ process.env.REACT_APP_API_KEY }` ,\n    authDomain: `${ process.env.REACT_APP_AUTH_DOMAIN }` ,\n    projectId: `${ process.env.REACT_APP_PROJECT_ID }` ,\n    storageBucket: `${ process.env.REACT_APP_STORAGE_BUCKET }` ,\n    messagingSenderId: `${ process.env.REACT_APP_MESSAGING_SENDER_ID }` ,\n    appId: `${ process.env.REACT_APP_APP_ID }` */\n});\n\nexport const getFirebase = () => {\n    return app;\n}\n\nexport const getFirestore = () => {\n    return firebase.firestore(app);\n};\n\n\n\n","//Hooks\nimport React, { useEffect, useState } from 'react'\nimport {useParams} from 'react-router-dom'\n\n//Components\nimport ItemList from '../ItemList/ItemList'\nimport Loader from '../../Loader/Loader';\n\n//Firestore\nimport { getFirestore } from '../../../firebase/firebaseConfig';\n\n//Particular CSS\nimport './ItemListContainer.css'\n\n\nconst ItemListContainer = () => {\n\n    const {categoryId} = useParams();//Categoria definida en ruta para saber que productos filtrar\n\n    const [items, setItems] = useState([]);\n    \n\n    useEffect(() => {\n\n        let isMounted = true;\n\n        const db = getFirestore();\n        const itemCollection = db.collection(\"items\");\n\n        itemCollection.get().then(( querySnapshot ) => {\n\n            if(isMounted){\n\n                if(querySnapshot.size === 0 ) {\n                    console.log('No results!')\n                }\n    \n                const documents = querySnapshot.docs.map( doc => ( {id: doc.id, ...doc.data()} ) )\n                setItems( documents ) ;\n            }\n        })\n        .catch(err => {\n            console.log('Error searching items', err );\n        });\n\n        return () => {\n            isMounted = false; \n        };\n\n    },[]);\n\n\n\n    if (items.length > 0){\n\n        if(categoryId !== undefined){\n            return(\n\n                <div className=\"item-list-container\">  \n                {\n                    <ItemList items={ items.filter(product => product.category === `${categoryId}`) } />\n                }  \n                </div>\n            ) \n        }else{\n            return(\n                <div className=\"item-list-container \">    \n                    <ItemList items={items} />\n                </div>\n            )\n        }\n    }else{\n        return(\n            <Loader/>\n        )\n    }\n    \n}\n\nexport default ItemListContainer;\n","import React,{useContext,useState ,useEffect, useCallback}from 'react'\n\n//Context\nimport {CartContext} from '../../../context/cartContext';\n//Librerias\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n//Particular CSS\nimport './ItemCount.css'\n\nconst ItemCount = ({  setIsAdded, initial, stock, item }) => {\n\n    const { addToCart,isInCart,updateItems } = useContext(CartContext);\n\n    // En caso que no haya stock cambio el valor inicial por \"Sin stock\"\n    if(stock === 0){ initial = \"Sin stock\"}\n\n    const [ counter, setCounter ] = useState(initial);\n    const [ isIn, setIsIn ] = useState();// State que controla si el producto ya esta añadido al cart\n    \n    // State que controla la suma de los items ya agregados al cart y los items que se quieren volver a sumar =>\n    // no superen el stock del item.\n    const [ limitToBuy, setLimitToBuy ] = useState();\n\n    const removeItem = () => setCounter(counter -1);\n    const addItem = () => setCounter(counter + 1);\n\n    const toasti = () => {toast(`${counter} ${counter>1 ? 'items agregados': 'item agregado'} al carrito `, {\n        position: \"top-left\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n    })};\n\n    const isItemAlreadyInCart = useCallback(() => isInCart(item.name),[isInCart, item.name]);\n    \n\n    const limitQtyToBuy = useCallback(() => {\n        \n        const qty = isItemAlreadyInCart();\n\n        if( (qty?.quantity + counter) === item.stock ) {\n            setLimitToBuy(true)\n        } else {\n            setLimitToBuy(false)\n        }\n        \n    },[counter, isItemAlreadyInCart,item.stock]) \n    \n\n    useEffect(() => {\n\n        setIsIn(isItemAlreadyInCart);\n        limitQtyToBuy();\n\n    }, [isItemAlreadyInCart, limitQtyToBuy])\n\n        \n    return (\n        <>  \n            <div className=\"item-counter\">\n\n                <div className=\"counter-container\">\n\n                    <button onClick = { removeItem } className=\"waves-effect waves-light btn counter-btn\" disabled={ counter <= initial }><p>-</p></button>\n                    <p className=\"counter-value\" onChange = { isItemAlreadyInCart } >\n                        {\n                            (isIn !== undefined && isIn?.quantity === isIn?.stock ) ?\n                            \"No hay mas stock\"\n                            :\n                            counter \n                        }\n                    </p>\n                    <button onClick = { addItem } className=\"waves-effect waves-light btn counter-btn\"\n                     disabled={ counter >= stock || stock === 0 || (isIn !== undefined && isIn?.quantity === isIn?.stock ) || limitToBuy }>\n                         <p>+</p>\n                    </button>\n                    \n                </div>\n\n                <button \n                    onClick={ ()=>{\n                        addToCart({item:item.name, quantity: counter, price: item.price, img: item.pictureUrl[0], id: item.id, stock: item.stock});\n                        setCounter(initial);\n                        setIsAdded(true);\n                        updateItems();\n                        toasti();\n                    }}\n                    className=\"waves-effect btn\"\n                    disabled={stock === 0 || (isIn !== undefined && isIn?.quantity === isIn?.stock )} //Deshabilito la opcion de comprar mas si es que ya se llego al limite de stock \n                >\n                    {\n                        isIn !== undefined  ? \n                        `Agregar ${counter} más` \n                        : \n                        'Agregar al carrito'\n                    }\n                    \n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default ItemCount\n","import React from 'react';\n//Routing\nimport { Link } from 'react-router-dom'\n//CSS particular\nimport './FinishBuying.css'\n\nconst FinishBuying = () => {\n    return (\n\n        <div className=\"finish-buying\">\n            <Link to=\"/cart\" \n                className=\"waves-effect btn\">\n                Ir al carrito\n                <i className=\"material-icons cart\">shopping_cart</i>\n            </Link>\n         </div>\n\n    )\n}\n\nexport default FinishBuying\n","import React from 'react';\n\n//Css particular\nimport './TechInfo.css';\n\nconst TechInfo = ({item}) => {\n    return (\n\n        <div className=\"details-container\">\n            <ul>\n                {\n                    item.details !== undefined \n                    &&\n                    Object.entries(item.details).map( ([key,value]) =>\n\n                        <li key={key}>{key.toUpperCase()}<span className=\"span\">{ value }</span></li> \n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default TechInfo\n","import React, { useState } from 'react';\n\n//Particular CSS\nimport './ItemDetail.css';\n\n//Components\nimport ItemCount from '../ItemCount/ItemCount';\nimport FinishBuying from '../../FinishBuying/FinishBuying';\nimport TechInfo from '../../TechnInfo/TechInfo';\n\n\nconst ItemDetail = ({item}) => {\n\n\n    const [ bigImg, setBigImg ] = useState('');\n    const [ isAdded, setIsAdded ] = useState(false);\n\n\n    return (\n        <div className=\"item-detail\">\n            <div className=\"container-one\">\n                <div className=\"img-counter-container\">\n                    <div className=\"small-images-big-image-container\">\n                        <div className=\"small-images\">\n                            <div className=\"sm-img\" \n                                style={{ \n                                    backgroundImage: `url(${item.pictureUrl[0]})` \n                                }}\n                                onMouseOver={ () => setBigImg({backgroundImage: `url(${item.pictureUrl[0] })`})}\n                            >\n                            </div>\n                            <div className=\"sm-img\" \n                                style={{\n                                    backgroundImage: `url(${ item.pictureUrl[1] !== undefined ? item.pictureUrl[1] : item.pictureUrl[0] })` \n                                }}\n                                onMouseOver={ () => setBigImg({backgroundImage: `url(${item.pictureUrl[1] !== undefined ? item.pictureUrl[1] : item.pictureUrl[0] })`})}\n                            >\n                            </div>\n                            <div className=\"sm-img\" \n                                style={{\n                                    backgroundImage: `url(${item.pictureUrl[2] !== undefined ? item.pictureUrl[2] : item.pictureUrl[0] })`,\n                                }}\n                                onMouseOver={ () =>{\n                                    setBigImg({backgroundImage: `url(${item.pictureUrl[2] !== undefined ? item.pictureUrl[2] : item.pictureUrl[0] })`});\n                                }}\n                            >\n                            </div>\n                        </div>\n                        <div className=\"big-image\" \n                            style={bigImg !== '' ? bigImg : { backgroundImage: `url(${item?.pictureUrl[0] })`} }\n                            >      \n                        </div>\n                    </div>\n                    <ItemCount isAdded={isAdded} setIsAdded={setIsAdded} initial={item.initial} stock={item.stock} item={item} /> \n                    {\n                        isAdded \n                            && \n                        <FinishBuying/>\n                    } \n                </div>\n            </div>\n            <div className=\"container-two\">\n                <div className=\"title-price\">\n \n                    <h4 className=\"item-name\">{item.name}</h4>\n                    <h4>${item.price}</h4>\n                    <p>STOCK: {item.stock}</p>\n                    <small>COD: { item.id}</small>\n                    <h6>Description: {item.description}</h6>\n                </div>\n                {/* Solo renderizo el detalle tecnico si es que existe\n                    Algunos productos no cuentan con detalle tecnico pero si con una descripción */}\n                {\n                    item.details !== undefined && <TechInfo item={item} />\n                }\n                \n            </div>\n        </div>\n    ) \n        \n\n\n}\n\nexport default ItemDetail\n","import React from 'react';\n\n//Icon Component\nimport { BiCommentError } from 'react-icons/bi';\n\n//Routing\nimport { Link } from 'react-router-dom';\n\n//Particular Css\nimport './NotExists.css';\n\nconst NotExists = ({title}) => {\n    return (\n        <>\n            <div className=\"not-exist-item\">\n                <BiCommentError className=\"coment-error\"/>\n                <h4>{title}</h4>\n                <Link to=\"/\"><button className=\"waves-effect waves-light btn backToLanding-btn\">Volver a la tienda</button></Link> \n            </div>\n        </>\n    )\n}\n\nexport default NotExists\n","import React, { useEffect, useState} from 'react'\n\n//Components\nimport ItemDetail from '../ItemDetail/ItemDetail';\nimport Loader from '../../Loader/Loader';\nimport NotExists from '../../NotExists/NotExists';\n\n//Hooks\nimport {useParams} from 'react-router-dom';\n\n//Firestore\nimport { getFirestore } from '../../../firebase/firebaseConfig';\n\n\nconst ItemDetailContainer = () => {\n\n    const [item, setItem ] = useState([]);\n    const [loading, setLoading ] = useState(true);\n\n    const {id} = useParams();//Utilizo el id de la ruta actual para saber que componente buscar y mostrar su detalle\n\n\n    useEffect(() => {\n\n        const db = getFirestore();\n\n        const itemCollection = db.collection('items');\n        const item = itemCollection.doc(id);\n        \n        item.get().then( doc => {\n\n            if(!doc.exists){\n                setItem(\"not exist\")\n                return;\n            }\n            \n            setItem({ id: doc.id, ...doc.data() });\n            \n        })\n        .catch(error => console.log(error))\n        .finally(()=> {\n            setLoading(false)\n        })\n\n    }, [id]);\n\n    if(loading) {\n        return (\n            <Loader/>\n        )\n    } else if(item === \"not exist\"){\n        return(\n            <NotExists title={\"Ooops!!! La página o producto que estas buscando no existe.\"}/>\n        )\n    } else {\n        return(\n            <ItemDetail item={item} /> \n        )\n    }\n}\n\nexport default ItemDetailContainer;\n","import React from 'react';\n\n//Css particular\nimport './CartItem.css'\n\nconst CartItem = ({item, quantity, price, img , deleteItem }) => {\n\n    return (\n        <>\n            <div className=\"cart-item \">\n                <i onClick={ ()=> deleteItem(item) } className=\"material-icons delete-item item\" >cancel</i>\n                <div  className=\"item-img item\" style={{backgroundImage: `url(${img})`}}>\n                </div>\n                <div className=\"item-name item\">\n                    {item}\n                </div>\n                <div className=\"item-quantity item\">\n                    {quantity}\n                </div>\n                <div className=\"item-value item\">\n                    $ {price}\n                </div>\n                <div className=\"item-totalValue item\">\n                    $ {quantity * price}\n                </div> \n            </div>\n            <hr/> \n        </>\n    )\n}\n\nexport default CartItem\n","import React,{useContext} from 'react';\n\n//CSS particular\nimport './Cart.css';\n\n//Context\nimport {CartContext} from '../../context/cartContext';\n\n//Routing\nimport { Link } from 'react-router-dom';\n\n//Components\nimport CartItem from '../CartItem/CartItem';\n\n\nconst Cart = () => {\n\n    const { cart, total, deleteItem}= useContext(CartContext);\n\n    if (cart.length !== 0) {\n\n        return (\n            <div className=\"cart-container\">\n                <div className=\"cart\">\n                    <div className=\"cart-columns\">\n                        <p></p>\n                        <p className=\"truncate\">Imagen</p>\n                        <p className=\"truncate\">Nombre</p>\n                        <p className=\"truncate\">Cantidad</p>\n                        <p className=\"truncate\">Valor unitario</p>\n                        <p className=\"truncate\">Total</p>\n                    </div>\n                    <div className=\"cart-items\">\n                        {\n                            cart.map( ({ item, quantity, price, img }) =>(\n                                <CartItem key={item} item={item} quantity={quantity} price={price} img={img} deleteItem={deleteItem}  />\n                            ))\n                        }\n                    </div>\n                    <div className=\"cart-total\">\n                        <p className=\"total-amount\">\n                        Subtotal ${ total }\n                        </p>\n                        <Link to=\"/order\" className=\"waves-effect btn\">Finalizar compra</Link>\n                    </div>\n                </div>\n            </div>\n        )\n\n    } else {\n        return(\n            <div className=\"cart-container-empty\">\n                <i className=\"material-icons empty-cart\">shopping_cart</i>\n                <h4 className=\"empty-cart-title\">Parece que tu carrito está vacio <br/> </h4>\n                <Link to=\"/\"><button className=\"waves-effect waves-light btn backToLanding-btn\">Volver a la tienda</button></Link> \n            </div>\n        )\n    }\n\n\n}\n\nexport default Cart;\n","import React,{useContext,useState, useEffect} from 'react';\n\n// Import firebase para usar la libreria de timestamp\nimport firebase from 'firebase/app';\nimport '@firebase/firestore';\n\n//Librerias\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n//Components\nimport NotExists from '../NotExists/NotExists';\n\n//Firestore\nimport { getFirestore } from '../../firebase/firebaseConfig';\n\n//Context\nimport {CartContext} from '../../context/cartContext';\n\n//History\nimport { useHistory } from \"react-router-dom\";\n\n//Hook-Form\nimport { useForm } from 'react-hook-form';\n\n//Css particular\nimport './BuyingForm.css';\n\nconst BuyingForm = () => {\n\n    const { cart, setCart, total, orderIds, setOrderIds, itemsInLocal } = useContext(CartContext);\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const email = watch(\"email\");\n    const confirmEmail = watch(\"confirmEmail\");\n\n    const [passErr, setPassErr] = useState(false);\n \n    const [ error, setError ] = useState(false);\n    \n    const [loading, setLoading] = useState(false);\n    //Este state controla que se haya generado una id de compra\n    const [newId, setNewId] = useState();\n\n    let history = useHistory();\n\n    //Si el carrito no esta vacio entonces mando notificacion motivacional\n    //De lo contrario redirigo al usuario a la home page\n    \n    useEffect(() =>{\n        if (cart.length !== 0){\n            motivationNotif()\n        } \n        \n        \n    }, [cart,history]);\n\n\n    const motivationNotif = () => {toast('Estas a solo un paso!! Completa los datos para coordinar la entrega del producto!!', {\n        position: \"bottom-left\",\n        autoClose: 7500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n    })};\n    const purchaseNotif = () => {toast('Compra realizada con exito!!El codigo de pedido resaltado es el mas reciente', {\n        position: \"bottom-left\",\n        autoClose: 7500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n    })};\n    toast.configure();\n    \n    //Funcion para actualizr los stocks en firestore de los productos recien comprados\n    const updateStocks = () => {\n\n        const db = getFirestore()\n        const itemCollection =  db.collection('items');\n        const bache = db.batch()\n\n        cart.forEach( item => {\n\n            bache.update(itemCollection.doc(item.id),{stock: item.stock - item.quantity})\n        })\n\n        bache\n        .commit()\n        .then(()=> {\n            console.log(\"Bache ok\")\n        })\n        .catch(e => console.log(e))\n\n    }\n\n    const handleOrder = (data)=> {\n\n        if (data) {\n\n            let order = \n            {\n                buyer: {\n                    name:  data.name,\n                    phone: data.telephone,\n                    email: data.email,\n                    adress: data.adress\n                },\n                items: cart.map(item => ({\n                    id: item.id,\n                    item: item.item,\n                    price: item.price,\n                    qty: item.quantity\n                })),\n                date:  firebase.firestore.Timestamp.fromDate( new Date()) ,\n                total: total\n            };\n\n            setLoading(true);\n            localStorage.removeItem('cart');\n            setCart( itemsInLocal );\n            \n            const db = getFirestore();\n            const ordersCollection = db.collection(\"orders\");\n\n            ordersCollection\n            .add(order)\n            .then( ({ id }) =>{\n                setOrderIds( [ ...orderIds, { id }] );\n                setNewId(id);\n            })\n            .catch(err => {\n                setError(err);\n            })\n            .finally(()=>{\n                \n                updateStocks();\n                purchaseNotif();\n                newId !== '' && history.push(\"/my-orders\");\n            })\n        }\n    };\n\n\n    return (\n\n        cart.length === 0  && loading === false ? (\n\n            <NotExists title={\"Sigue mirando nuestro productos!!\"}/>\n        ): (\n            \n                <div className=\"buy-form-container\">\n\n                <form onSubmit={handleSubmit(handleOrder)} className=\"form-container\" >\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">account_circle</i>\n                        <input \n                            name=\"name\" \n                            id=\"name\" \n                            type=\"text\" \n                            className=\"validate\" \n                            autoComplete=\"none\" \n                            ref={register({\n                                required: \"Ingresar nombre\", minLength: {value:2, message:\"Minimo 2 caracteres\"}, maxLength: {value:12, message:\"Maximo 12 caracteres\"}\n                            })}\n                            />\n                        <label htmlFor=\"name\" >Nombre</label>\n                        { errors.name && <small>{ errors.name.message }</small> }\n                    </div>\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">directions</i>\n                        <input \n                            name=\"adress\" \n                            id=\"adress\" \n                            type=\"text\" \n                            className=\"validate\" \n                            autoComplete=\"none\" \n                            ref={register({\n                                required: \"Ingresar direccion\", minLength: {value:2, message:\"Minimo 2 caracteres\"}, maxLength: {value:60, message:\"Maximo 60 caracteres\"}\n                            })}\n                        />\n                        <label htmlFor=\"adress\">Direccion</label>\n                        { errors.lastname && <small>{ errors.lastname.message }</small> }\n                    </div>\n\n\n\n\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">phone</i>\n                        <input \n                            name=\"telephone\" \n                            id=\"telephone\" \n                            type=\"tel\" \n                            className=\"validate\"\n                            autoComplete=\"none\" \n                            ref={register({\n                                required: \"Ingrese su numero\", pattern: {\n                                    value: /^(?:(?:00)?549?)?0?(?:11|[2368]\\d)(?:(?=\\d{0,2}15)\\d{2})??\\d{8}$/, message:\"Ingrese un numero valido\"\n                                } \n                            })}\n                        />\n                        <label htmlFor=\"telephone\">Telefono/Celular</label>\n                        { errors.telephone && <small>{ errors.telephone.message }</small> }\n                    </div>\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">email</i>\n                        <input \n                            name=\"email\" \n                            id=\"email\" \n                            type=\"email\" \n                            className=\"validate\" \n                            autoComplete=\"none\"\n                            ref={register({\n                                required: \"Ingrese un email\", pattern:{ \n                                    value:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/ , message: \"Ingrese un email valido\"\n                                } \n                            })} \n                        />\n                        <label htmlFor=\"email\">Email</label>\n                        { errors.email && <small>{ errors.email.message }</small> }\n                    </div>\n\n                    <div className=\"input-field\">\n                        <i className=\"material-icons prefix\">email</i>\n                        <input \n                            name=\"confirmEmail\" \n                            id=\"confirmEmail\" \n                            type=\"email\" \n                            className=\"validate\" \n                            autoComplete=\"none\"\n                            ref={register({\n                                required: \"Ingrese un email\", pattern:{ \n                                    value:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/ , message: \"Ingrese un email valido\"\n                                } \n                            })} \n                            onBlur = { ()=> confirmEmail !== email ? setPassErr(true) : setPassErr(false)}\n                            onChange = { ()=> confirmEmail === email && setPassErr(false) }\n                        />\n                        <label htmlFor=\"confirmEmail\">Confirmar Email</label>\n                        { passErr && <small>{ \"Sus emails son diferentes\"}</small> }\n                    </div>\n\n                    {/* Unica forma de que los autocomplete \"none\" funcionen fue agregando autoComplete = \"none\" a todos los inputs\n                    y crear un ultimo input innecesario (display: none) con autoComplete='on' */}\n                    <div className=\"input-field\" style={{display: 'none'}}>\n                        <i className=\"material-icons prefix\">email</i>\n                        <input id=\"asd\" type=\"email\" className=\"validate\" autoComplete=\"on\"/>\n                        <label htmlFor=\"asd\">Email</label>\n                    </div>\n                    {/* Fin de input innecesario :D */}\n\n                    <h5 className=\"total-amount\">\n                        Subtotal &nbsp; ${ total }\n                    </h5>\n                    <span></span>\n                    {error && <p>{error}</p> }\n\n\n                    {\n                        loading ? (\n                            <button className=\"waves-effect btn btn-getOrder \">\n                                <div className=\"loop\">\n                                    <i className=\"material-icons\">loop </i>\n                                </div>\n                            </button>\n                        ) : (\n                            <button disabled={ confirmEmail !== email } type=\"submit\" className= \"waves-effect btn btn-buy \">\n                                Finalizar compra\n                            </button>\n                        )\n                    }\n\n                </form>\n            </div>\n        )\n\n\n    )\n}\n\nexport default BuyingForm\n","import React,{useContext, useState, useEffect} from 'react';\n\n//Luxon\nimport { DateTime } from 'luxon';\n\n//Context\nimport {CartContext} from '../../context/cartContext';\n\n//Firestore\nimport { getFirestore } from '../../firebase/firebaseConfig';\n\n//Components\nimport Loader from '../Loader/Loader';\n\n//Css particular\nimport './MyOrders.css';\n\nconst MyOrders = () => {\n\n    const { orderIds ,setOrderIds } = useContext(CartContext);\n\n    const [ ordersInfo, setOrdersInfo ] = useState([]);\n    const [ loading, setLoading ] = useState(true);\n\n\n    useEffect(() => {\n\n        let isMounted = true;\n\n        const db = getFirestore();\n\n        // En \"getOrders\", \"itemRefs\" devuelve una promesa del documento especifico por cada id de compra que hay en el array de ids \"orderIds\".\n        // Luego voy a esperar que se resuelvan todas esas promesas con un Promise.All y ahi si llamar a setOrdersInfo para guardar la informacion.\n        if (isMounted) {\n            const getOrders = (orderIds, setOrdersInfo) => {\n\n                let itemRefs = orderIds.map( ({id}) => {\n                    return db.collection('orders').doc(id).get();\n                });\n        \n                Promise.all(itemRefs)\n                .then(docs => {\n        \n                    let items = docs.map(doc => ({id: doc.id, ...doc.data() } ) );\n                    //Reverse para que la ultima compra figure arriba\n                    setOrdersInfo(items.reverse())\n                })\n                .catch(e => console.log(e))\n                .finally(()=>{\n                    setLoading(false)\n                })\n        \n            };\n            getOrders( orderIds, setOrdersInfo);\n\n            return () => {\n                isMounted = false; \n            };\n        }\n\n\n    }, [orderIds]);\n\n    const time = (seconds)=> {\n\n        return  DateTime.fromSeconds(seconds)\n    }\n\n    if(loading) {\n        return(\n            <Loader/>\n        )\n    } else {\n        return (\n\n            <div className=\"orders-container\">\n                <div className=\"orders-organizer\">\n                    <h3 className=\"title\">Mis compras</h3>\n    \n                    <button \n                        className=\"waves-effect  waves-light btn\"\n                        onClick={()=> {\n                            localStorage.removeItem('my-orders');\n                            setOrderIds([])\n                        }}>\n                        Borrar historial\n                    </button>\n    \n                    <div className=\"orders-columns\">\n                        <p>Fecha</p>\n                        <p>Productos</p>\n                        <p>Codigo de pedido</p>\n                        <p>Total</p>\n                    </div>\n                    <div className=\"orders\">\n                        {   \n                            ordersInfo.length > 0 && (\n    \n                                ordersInfo.map( ({ id, total, date, items }) =>\n    \n                                    <div className=\"order-row\" key={id}>\n                                        <div className=\"order-info date\" >\n                                            {   \n                                                date &&\n                                                `${time(date.seconds).c.day}/${time(date.seconds).c.month}/${time(date.seconds).c.year} \n                                                ${time(date.seconds).c.hour}:${time(date.seconds).c.minute} `\n                                            }                           \n                                        </div>\n                                        <div className=\"order-info items\">\n                                            <ul>\n                                            {\n                                                items &&\n                                                items.map(item => <li className=\"truncate\" key={item.id}> {item.qty} x {item.item} </li> )\n                                            }\n                                            </ul>\n                                        </div>\n                                        <div className=\"order-info id \"> { id } </div>\n                                        <div className=\"order-info total\"> ${ total } </div>\n                                    </div>\n                                )\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MyOrders\n","\nimport './Heading.css'\n\nconst Heading = () => {\n      return (\n           \n                  <div className=\"heading\">\n                        <p>NexGym Store</p>\n                        <h2>Los Mejores Productos Fitness</h2>\n                  </div>\n          \n      )\n}\n\nexport default Heading\n","\nimport React, { useEffect, useState} from 'react';\n\n// Libreria de Materialize\nimport M from 'materialize-css';\n\n//CSS core de Materialize\nimport 'materialize-css/dist/css/materialize.min.css';\n\n//Componentes\nimport NavBar from  './components/NavBar/NavBar.jsx';\nimport ItemListContainer from './components/itemComponents/ItemListContainer/ItemListContainer';\nimport ItemDetailContainer from './components/itemComponents/ItemDetailContainer/ItemDetailContainer.jsx';\nimport Cart from './components/Cart/Cart';\nimport BuyingForm from './components/BuyingForm/BuyingForm.jsx';\nimport MyOrders from './components/MyOrders/MyOrders.jsx';\nimport Heading from './components/Heading/Heading.jsx';\n\n//Librerias\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n//Context\nimport {CartProvider} from './context/cartContext';\n\n//Router \nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n//Css particular\nimport './assets/styles/app.css'\nimport './assets/styles/colors.css'\n\n\nconst App = () => {\n\n    //State para controlar el toastify de bienvenida, una vez que entra el usuario no se mostrara si recarga la pagina\n    const [ justEntered, setJustEntered ] = useState(localStorage.getItem('justEntered'));\n\n    //Inicializo funcionalidades de materialize\n    useEffect(() => {\n        M.AutoInit();\n    }, []);\n    //Invoco el toast de bienvenida solo si es la primera vez que entra a la pagina\n    useEffect(() => {\n\n        if( justEntered === null ){\n\n            toasti();\n            localStorage.setItem('justEntered', true);\n            setJustEntered(false);\n        }\n\n    }, [justEntered]);\n\n    const toasti = () => {toast('Bienvenido a nexGym', {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n    })};\n    toast.configure();\n\n\n\n    return(\n        <Router>\n            <CartProvider>\n                <NavBar/>\n                <Heading /> \n                <Switch>\n                    <Route path=\"/\" exact component={ItemListContainer}/>\n                    <Route path=\"/categories/:categoryId\" component={ItemListContainer}/>\n                    <Route path=\"/item/:id\" component={ItemDetailContainer}/>\n                    <Route path=\"/cart\" component={Cart}/>\n                    <Route path=\"/order\" component={BuyingForm}/>\n                    <Route path=\"/my-orders\" component={MyOrders}/>\n                </Switch>\n            </CartProvider>\n        </Router>\n    ) \n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst root = document.getElementById('root');\n\nReactDOM.render( <App /> , root );"],"sourceRoot":""}